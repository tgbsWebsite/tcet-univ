:root {
  --spg-primary: #f97316;  /* orange */
  --spg-bg-light: #ffffff;
  --spg-bg-dark: #1f2937;
  --spg-text: #f97316;
  --spg-radius: 4px;
  --spg-focus-ring: 2px;
}

/* Center page */
.spg-page {
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--spg-bg-light);
  /* min-height: 100vh; */
}

/* Entire clickable button wrapper */
.spg-wrap.spg-button {
  position: relative;                 /* for swipe layer */
  isolation: isolate;                 /* keep overlay stacking local */
  overflow: hidden;                   /* clip swipe */
  margin-top: 24px;
  display: inline-flex;               /* size to content */
  align-items: center;
  justify-content: center;
  gap: 35px;                          /* space between label and icon */
  width: auto;
  max-width: none;
  padding: 12px 16px;
  border: 1px solid var(--spg-primary);
  border-radius: var(--spg-radius);
  background: var(--spg-bg-light);
  color: var(--spg-text);             /* initial label color */
  cursor: pointer;
  text-transform: uppercase;
  letter-spacing: 0.3px;
  white-space: nowrap;
  transition:
    color 180ms ease,
    border-color 180ms ease,
    background-color 180ms ease,
    box-shadow 160ms ease;
}

/* Swipe fill layer (slides in from left) */
.spg-wrap.spg-button::before {
  content: "";
  position: absolute;
  inset: 0;
  background: var(--spg-primary);
  transform: translateX(-100%);       /* start outside left */
  transition: transform 260ms ease;   /* swipe timing */
  z-index: -1;                        /* under text/icon */
}

/* Hover: show focus ring and swipe fill, invert text color */
.spg-wrap.spg-button:hover {
  color: #fff;                        /* turn label white */
  box-shadow: 0 0 0 var(--spg-focus-ring) rgba(249, 115, 22, 0.5);
}
.spg-wrap.spg-button:hover::before {
  transform: translateX(0);           /* fill left -> right */
}

/* Text inside the button (kept for specificity if nested) */
.spg-input-text {
  color: inherit;                      /* follow parent color */
}

/* Arrow icon */
.spg-icon {
  width: 20px;
  height: 20px;
  object-fit: contain;
  transition: transform 160ms ease, opacity 160ms ease;
}
.spg-wrap.spg-button:hover .spg-icon {
  transform: translateX(4px);          /* subtle nudge right on hover */
}

/* Keyboard accessibility */
.spg-wrap.spg-button:focus-visible {
  outline: none;
  box-shadow:
    0 0 0 var(--spg-focus-ring) rgba(249,115,22,0.65),
    0 0 0 calc(var(--spg-focus-ring) + 2px) rgba(249,115,22,0.35);
}

/* Optional: allow wrapping on very small screens */
@media (max-width: 360px) {
  .spg-wrap.spg-button { white-space: normal; }
}

/* Dark mode */
.dark .spg-page {
  background: var(--spg-bg-dark);
}
.dark .spg-wrap.spg-button {
  background: var(--spg-bg-dark);
  border-color: var(--spg-primary);
  color: var(--spg-primary);          /* initial label in dark */
}
.dark .spg-wrap.spg-button::before {
  background: var(--spg-primary);     /* same orange swipe */
}
.dark .spg-wrap.spg-button:hover {
  color: #fff;                        /* white text on hover in dark */
}

/* 1) Expose the second cardâ€™s background as a CSS variable for reuse */
.sdc_futureCard {
  --sdc-second-bg: #8468b5; /* ensure this matches your purple */
  background-color: var(--sdc-second-bg);
}

/* 2) Prepare the swap overlay inside the first card */
.sdc_schoolsCard {
  position: relative; /* anchor for overlay */
  overflow: hidden;   /* clip overlay edges */
}

/* overlay that will fade/slide in with second card content */
.sdc_swapLayer {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  text-align: center;
  color: #fff;

  /* start hidden below */
  opacity: 0;
  transform: translateY(12px) scale(.98);
  transition: opacity .5s ease, transform .5s ease;
  pointer-events: none;
}

/* 3) Color morph on the first card when swapped (0.5s) */
.sdc_swapOn .sdc_schoolsCard {
  background-color: var(--sdc-second-bg, #8468b5);
  transition: background-color .5s ease;
}

/* 4) Cross-fade text: hide original, show overlay in 0.5s */
.sdc_swapOn .sdc_schoolsCard .sdc_numberDisplay,
.sdc_swapOn .sdc_schoolsCard .sdc_schoolsText,
.sdc_swapOn .sdc_schoolsCard .sdc_iconSection {
  opacity: 0;
  transform: translateY(-8px) scale(.99);
  transition: opacity .5s ease, transform .5s ease;
}

.sdc_swapOn .sdc_schoolsCard .sdc_swapLayer {
  opacity: 1;
  transform: translateY(0) scale(1);
}

/* 5) Optional: nudge the second card as if it pushes content forward */
.sdc_swapOn .sdc_futureCard {
  transform: translate(-10px, -6px) scale(.98);
  transition: transform .5s ease, box-shadow .5s ease, filter .5s ease;
  filter: brightness(1.03);
}

/* button style (optional helper) */
.sdc_swapTrigger {
  margin-top: 12px;
  padding: 8px 12px;
  border: 0;
  border-radius: 6px;
  background: #eee;
  cursor: pointer;
}

/* Accessibility: allow keyboard trigger on Enter/Space if swapping via .sdc_futureCard as control */
/* You can also set role="button" and tabindex="0" on .sdc_futureCard and toggle the class from JS. */
